/signal_slot {
    /// Make a connection to one or more 'signals' from one or more 'nodes' to a local resource.
    /// rw+stream T or ro+stream T properties can be connected to rw+stream T or wo+stream T ones
    /// signal_out<T> can be connected to signal_in<T>
    /// T must be SemVer compatible, to check this, first a descriptor block must be requested. It will contain
    /// all local and globally published types definitions.
    ///
    /// Theoretically compatibility-by-form might be possible to also check, but types can be incompatible in some
    /// intrinsic way. Some form of impl From<T> might be possible to implement across the Registry.
    /// More likely direct conversions would not be possible for many types, would be interesing to pull in some From<T>
    /// impls from the Registry when generating code.
    ///
    /// Unit conversion is an additional thing to check as well. Much easier to check compatibility and map when needed.
    /connect< fn(
        node_set: NodeSet,
        resource_set: ResourceSet,
        priority: Priority,
        rates: [Rates; ?],
        to_local: Uri
    ) >

    /// Disconnect specified 'signals' from a local resource.
    /disconnect< fn(node_set: NodeSet, resource_set: ResourceSet, from_local: Uri) >

    /// Get connections list for a local resource.
    /list< fn(local: Uri) -> [(NodeId, Uri); ?] >
}